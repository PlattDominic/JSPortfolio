const canvas = document.getElementById('canvas1');
const ctx = canvas.getContext('2d');
canvas.width = window.innerWidth;
canvas.height = window.innerHeight;
const PARTICLESARRAY = [];


class Particle {
    constructor() {
        this.x = Math.random() * canvas.width;
        this.y = Math.random() * canvas.height;
        this.size = Math.random() * 5 + 1;
        this.speedX = Math.random() * 3 - 1.5;
        this.speedY = Math.random() * 3 - 1.5;
    }

    update() {
        this.x += this.speedX;
        this.y += this.speedY;
    }
    draw() {
        ctx.fillStyle = 'red';
        ctx.beginPath();
        ctx.arc(this.x, this.y, 50, 0, Math.PI * 2);
        ctx.fill();
    }
}

function init() {
    for (let i = 0; i < 100; i++) {
        PARTICLESARRAY.push(new Particle());
    }
}

function handleParticles() {
    for (let i = 0; i< PARTICLESARRAY.length; i++) {
        PARTICLESARRAY[i].update();
        PARTICLESARRAY[i].draw();

    }
}

window.addEventListener('resize', () => {
    canvas.width = window.innerWidth;
    canvas.height = window.innerHeight;
});

const mouse = {
    x: undefined,
    y: undefined
};

canvas.addEventListener('click', (e) => {
    mouse.x = e.x;
    mouse.y = e.y;
});


canvas.addEventListener('mousemove', (e) => {
    mouse.x = e.x;
    mouse.y = e.y;
});


// function drawCircle() {
//     ctx.fillStyle = 'red';
//     // ctx.strokeStyle = 'blue';
//     // ctx.lineWidth = 4;
//     ctx.beginPath();
//     ctx.arc(mouse.x, mouse.y, 50, 0, Math.PI * 2);
//     // ctx.stroke();
//     ctx.fill();
// }

function animate() {
    ctx.clearRect(0, 0, canvas.width, canvas.height);
    // drawCircle();
    handleParticles();
    requestAnimationFrame(animate);
}


init();

animate();